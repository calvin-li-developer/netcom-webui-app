# create a docker build pipeline
name: day 4 cicd

on:
    push:
        branches:
            - "dev"

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: pre-checks
              run: |
                uname -r
                whoami
                cat /etc/os-release
                docker version
                docker-compose version

                if [ "$GITHUB_REF" = "refs/heads/main" ]; then
                  echo "tag=latest" >> $GITHUB_ENV
                elif [ "$GITHUB_REF" = "refs/heads/dev" ]; then
                  echo "tag=dev" >> $GITHUB_ENV
                fi
            
            - name: Checkout repository
              uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 #v4.1.6

            - name: SonarQube Scan
              uses: sonarsource/sonarqube-scan-action@86fe81775628f1c6349c28baab87881a2170f495 #v2.1.0
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
              with:
                projectBaseDir: python-app-secret
                args: >
                  -Dsonar.projectKey=calvinli-python-project
                  -Dsonar.sources=.
            
            - name: Use docker compose to build
              run: |
                cd python-app-secret
                docker compose up -d
                docker compose ps
            
            - name: Generate Unix timestamp
              run: echo "timestamp=$(date +%s)" >> $GITHUB_ENV

            - name: docker build custom tag verison
              env:
                IMAGE_TAG: v${{ env.timestamp }}
              run: |
                cd python-app-secret
                docker build -t netcomwebuiapp:$IMAGE_TAG .
            
            - name: Run Trivy vulnerability scanner
              env:
                IMAGE_TAG: v${{ env.timestamp }}
              uses: aquasecurity/trivy-action@fd25fed6972e341ff0007ddb61f77e88103953c2 #v0.21.0
              with:
                scan-type: 'image'
                severity: 'HIGH,CRITICAL'
                image-ref: netcomwebuiapp:${{ env.IMAGE_TAG }}
                format: 'table'
                exit-code: '1'
            
            - name: Log in to Docker Hub
              uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 #v3.2.0
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
            
            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 #v5.5.1
              with:
                images: ${{ secrets.DOCKERHUB_USERNAME }}/netcompythonapp
            
            - name: Build and push Docker image
              id: push
              env:
                IMAGE_TAG: v${{ env.timestamp }}
              uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 #v5.3.0
              with:
                context: ./python-app-secret
                file: ./python-app-secret/Dockerfile
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/netcompythonapp:${{ env.IMAGE_TAG }}
                labels: ${{ steps.meta.outputs.labels }}
        
            - name: docker clean up
              run: |
                docker compose down
                docker logout
