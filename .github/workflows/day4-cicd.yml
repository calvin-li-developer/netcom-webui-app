# create a docker build pipeline
name: day 4 cicd

on:
    push:
        branches:
            - "dev"

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: pre-checks
              run: |
                uname -r
                whoami
                cat /etc/os-release
                docker version
                docker-compose version

                if [ "$GITHUB_REF" = "refs/heads/main" ]; then
                  echo "tag=latest" >> $GITHUB_ENV
                elif [ "$GITHUB_REF" = "refs/heads/dev" ]; then
                  echo "tag=dev" >> $GITHUB_ENV
                fi
            
            - name: Checkout repository
              uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 #v4.1.6

            - name: SonarQube Scan
              uses: sonarsource/sonarqube-scan-action@86fe81775628f1c6349c28baab87881a2170f495 #v2.1.0
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
              with:
                projectBaseDir: python-app-secret
                args: >
                  -Dsonar.projectKey=calvinli-python-project
                  -Dsonar.sources=.
            
            - name: Use docker compose to build
              run: |
                cd python-app-secret
                docker compose up -d
                docker compose ps
            
            - name: Generate Unix timestamp
              run: echo "timestamp=$(date +%s)" >> $GITHUB_ENV

            - name: docker build custom tag verison
              env:
                IMAGE_TAG: v${{ env.timestamp }}
              run: |
                cd python-app-secret
                docker build -t netcomwebuiapp:$IMAGE_TAG .
            
            - name: Run Trivy vulnerability scanner
              env:
                IMAGE_TAG: v${{ env.timestamp }}
              uses: aquasecurity/trivy-action@fd25fed6972e341ff0007ddb61f77e88103953c2 #v0.21.0
              with:
                scan-type: 'image'
                severity: 'HIGH,CRITICAL'
                image-ref: netcomwebuiapp:$IMAGE_TAG
                format: 'table'
                exit-code: '1'
